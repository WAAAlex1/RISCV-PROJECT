[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\alexa\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\alexa\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.8.0 (Oracle Corporation Java 19.0.2)
[debug]       Load.loadUnit: plugins took 198.0774ms
[debug]       Load.loadUnit: defsScala took 0.304899ms
[debug] [Loading] Scanning directory C:\Users\alexa\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\alexa\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 19.0869 ms
[debug]           Load.resolveProject(global-plugins) took 59.866899ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\alexa\.sbt\1.0\plugins, plugins: List(<none>))) took 110.879201ms
[debug] [Loading] Done in C:\Users\alexa\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 148.1102ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2891ms
[debug]     Load.loadUnit(file:/C:/Users/alexa/.sbt/1.0/plugins/, ...) took 365.172501ms
[debug]   Load.apply: load took 659.392499ms
[debug]   Load.apply: resolveProjects took 10.3337ms
[debug]   Load.apply: finalTransforms took 97.1023ms
[debug]   Load.apply: config.delegates took 9.6264ms
[debug]   Load.apply: Def.make(settings)... took 562.3333ms
[debug]   Load.apply: structureIndex took 128.112699ms
[debug]   Load.apply: mkStreams took 4.842599ms
[info] loading global plugins from C:\Users\alexa\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 11457.488799ms
[debug]           Load.loadUnit: plugins took 52.0572ms
[debug]           Load.loadUnit: defsScala took 0.0041ms
[debug] [Loading] Scanning directory C:\Users\alexa\OneDrive - Danmarks Tekniske Universitet\EK2Chisel\chisel-lab-master\vending\project
[debug]             Load.loadUnit: mkEval took 44.1486ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\alexa\OneDrive - Danmarks Tekniske Universitet\EK2Chisel\chisel-lab-master\vending\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.4578 ms
[info] loading settings for project vending-build from idea.sbt ...
[debug]               Load.resolveProject(vending-build) took 7.5975ms
[debug]             Load.loadTransitive: finalizeProject(Project(id vending-build, base: C:\Users\alexa\OneDrive - Danmarks Tekniske Universitet\EK2Chisel\chisel-lab-master\vending\project, plugins: List(<none>))) took 9.650799ms
[debug] [Loading] Done in C:\Users\alexa\OneDrive - Danmarks Tekniske Universitet\EK2Chisel\chisel-lab-master\vending\project, returning: (vending-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 6752.9527ms
[debug]           Load.loadUnit: cleanEvalClasses took 9.491599ms
[debug]         Load.loadUnit(file:/C:/Users/alexa/OneDrive%20-%20Danmarks%20Tekniske%20Universitet/EK2Chisel/chisel-lab-master/vending/project/, ...) took 6815.9253ms
[debug]       Load.apply: load took 6818.2527ms
[debug]       Load.apply: resolveProjects took 0.1154ms
[debug]       Load.apply: finalTransforms took 12.3757ms
[debug]       Load.apply: config.delegates took 0.345ms
[debug]       Load.apply: Def.make(settings)... took 141.162599ms
[debug]       Load.apply: structureIndex took 34.918699ms
[debug]       Load.apply: mkStreams took 0.002499ms
[info] loading project definition from C:\Users\alexa\OneDrive - Danmarks Tekniske Universitet\EK2Chisel\chisel-lab-master\vending\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 8508.3385ms
[debug]     Load.loadUnit: defsScala took 0.003899ms
[debug] [Loading] Scanning directory C:\Users\alexa\OneDrive - Danmarks Tekniske Universitet\EK2Chisel\chisel-lab-master\vending
[debug]       Load.loadUnit: mkEval took 0.3268ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\alexa\OneDrive - Danmarks Tekniske Universitet\EK2Chisel\chisel-lab-master\vending, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.3207 ms
[info] loading settings for project vending from build.sbt ...
[debug]         Load.resolveProject(vending) took 42.227699ms
[debug]       Load.loadTransitive: finalizeProject(Project(id vending, base: C:\Users\alexa\OneDrive - Danmarks Tekniske Universitet\EK2Chisel\chisel-lab-master\vending, plugins: List(<none>))) took 45.8794ms
[debug] [Loading] Done in C:\Users\alexa\OneDrive - Danmarks Tekniske Universitet\EK2Chisel\chisel-lab-master\vending, returning: (vending)
[debug]     Load.loadUnit: loadedProjectsRaw took 2785.9457ms
[debug]     Load.loadUnit: cleanEvalClasses took 71.467501ms
[debug]   Load.loadUnit(file:/C:/Users/alexa/OneDrive%20-%20Danmarks%20Tekniske%20Universitet/EK2Chisel/chisel-lab-master/vending/, ...) took 11367.0011ms
[debug] Load.apply: load took 11369.2724ms
[debug] Load.apply: resolveProjects took 0.5206ms
[debug] Load.apply: finalTransforms took 47.9266ms
[debug] Load.apply: config.delegates took 0.3517ms
[debug] Load.apply: Def.make(settings)... took 87.5754ms
[debug] Load.apply: structureIndex took 26.1758ms
[debug] Load.apply: mkStreams took 0.0031ms
[info] set current project to vending (in build file:/C:/Users/alexa/OneDrive%20-%20Danmarks%20Tekniske%20Universitet/EK2Chisel/chisel-lab-master/vending/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 54362 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 54362, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to vending (in build file:/C:/Users/alexa/OneDrive%20-%20Danmarks%20Tekniske%20Universitet/EK2Chisel/chisel-lab-master/vending/)
[debug] > Exec(idea-shell, None, None)
