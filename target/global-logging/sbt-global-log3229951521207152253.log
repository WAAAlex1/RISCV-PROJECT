[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\alexa\AppData\Local\Temp\idea1.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\alexa\AppData\Local\Temp\idea1.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.8.0 (Oracle Corporation Java 19.0.2)
[debug]       Load.loadUnit: plugins took 872.7558ms
[debug]       Load.loadUnit: defsScala took 0.2756ms
[debug] [Loading] Scanning directory C:\Users\alexa\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\alexa\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 176.8142 ms
[debug]           Load.resolveProject(global-plugins) took 932.728ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\alexa\.sbt\1.0\plugins, plugins: List(<none>))) took 1141.7565ms
[debug] [Loading] Done in C:\Users\alexa\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 1165.9371ms
[debug]       Load.loadUnit: cleanEvalClasses took 1.3034ms
[debug]     Load.loadUnit(file:/C:/Users/alexa/.sbt/1.0/plugins/, ...) took 2057.1936ms
[debug]   Load.apply: load took 6294.2135ms
[debug]   Load.apply: resolveProjects took 168.3163ms
[debug]   Load.apply: finalTransforms took 2522.6588ms
[debug]   Load.apply: config.delegates took 42.658ms
[debug]   Load.apply: Def.make(settings)... took 4664.5053ms
[debug]   Load.apply: structureIndex took 563.0343ms
[debug]   Load.apply: mkStreams took 1.3343ms
[info] loading global plugins from C:\Users\alexa\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 35526.0319ms
[debug]           Load.loadUnit: plugins took 29.7081ms
[debug]           Load.loadUnit: defsScala took 0.0047ms
[debug] [Loading] Scanning directory C:\Users\alexa\OneDrive - Danmarks Tekniske Universitet\EK2Chisel\chisel-lab-master\vending\project
[debug]             Load.loadUnit: mkEval took 10.332ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\alexa\OneDrive - Danmarks Tekniske Universitet\EK2Chisel\chisel-lab-master\vending\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 53.1323 ms
[info] loading settings for project vending-build from idea1.sbt ...
[debug]               Load.resolveProject(vending-build) took 33.6878ms
[debug]             Load.loadTransitive: finalizeProject(Project(id vending-build, base: C:\Users\alexa\OneDrive - Danmarks Tekniske Universitet\EK2Chisel\chisel-lab-master\vending\project, plugins: List(<none>))) took 91.1195ms
[debug] [Loading] Done in C:\Users\alexa\OneDrive - Danmarks Tekniske Universitet\EK2Chisel\chisel-lab-master\vending\project, returning: (vending-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 15879.5861ms
[debug]           Load.loadUnit: cleanEvalClasses took 111.2455ms
[debug]         Load.loadUnit(file:/C:/Users/alexa/OneDrive%20-%20Danmarks%20Tekniske%20Universitet/EK2Chisel/chisel-lab-master/vending/project/, ...) took 16024.0544ms
[debug]       Load.apply: load took 16041.2542ms
[debug]       Load.apply: resolveProjects took 0.9091ms
[debug]       Load.apply: finalTransforms took 211.5177ms
[debug]       Load.apply: config.delegates took 0.7663ms
[debug]       Load.apply: Def.make(settings)... took 589.2796ms
[debug]       Load.apply: structureIndex took 43.4676ms
[debug]       Load.apply: mkStreams took 0.002ms
[info] loading project definition from C:\Users\alexa\OneDrive - Danmarks Tekniske Universitet\EK2Chisel\chisel-lab-master\vending\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 19763.294ms
[debug]     Load.loadUnit: defsScala took 0.003ms
[debug] [Loading] Scanning directory C:\Users\alexa\OneDrive - Danmarks Tekniske Universitet\EK2Chisel\chisel-lab-master\vending
[debug]       Load.loadUnit: mkEval took 0.4232ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\alexa\OneDrive - Danmarks Tekniske Universitet\EK2Chisel\chisel-lab-master\vending, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 125.011 ms
[info] loading settings for project vending from build.sbt ...
[debug]         Load.resolveProject(vending) took 196.8244ms
[debug]       Load.loadTransitive: finalizeProject(Project(id vending, base: C:\Users\alexa\OneDrive - Danmarks Tekniske Universitet\EK2Chisel\chisel-lab-master\vending, plugins: List(<none>))) took 329.553ms
[debug] [Loading] Done in C:\Users\alexa\OneDrive - Danmarks Tekniske Universitet\EK2Chisel\chisel-lab-master\vending, returning: (vending)
[debug]     Load.loadUnit: loadedProjectsRaw took 1188.325ms
[debug]     Load.loadUnit: cleanEvalClasses took 585.0484ms
[debug]   Load.loadUnit(file:/C:/Users/alexa/OneDrive%20-%20Danmarks%20Tekniske%20Universitet/EK2Chisel/chisel-lab-master/vending/, ...) took 21537.7508ms
[debug] Load.apply: load took 21539.9031ms
[debug] Load.apply: resolveProjects took 0.107ms
[debug] Load.apply: finalTransforms took 335.6534ms
[debug] Load.apply: config.delegates took 2.5845ms
[debug] Load.apply: Def.make(settings)... took 836.5379ms
[debug] Load.apply: structureIndex took 31.9068ms
[debug] Load.apply: mkStreams took 0.0019ms
[info] set current project to vending (in build file:/C:/Users/alexa/OneDrive%20-%20Danmarks%20Tekniske%20Universitet/EK2Chisel/chisel-lab-master/vending/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 50233 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 50233, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to vending (in build file:/C:/Users/alexa/OneDrive%20-%20Danmarks%20Tekniske%20Universitet/EK2Chisel/chisel-lab-master/vending/)
[debug] > Exec(idea-shell, None, None)
