[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.8.0 (Oracle Corporation Java 19.0.2)
[debug]       Load.loadUnit: plugins took 23.197ms
[debug]       Load.loadUnit: defsScala took 0.0027ms
[debug] [Loading] Scanning directory C:\Users\alexa\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\alexa\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.1839 ms
[debug]           Load.resolveProject(global-plugins) took 1.1913ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\alexa\.sbt\1.0\plugins, plugins: List(<none>))) took 3.8401ms
[debug] [Loading] Done in C:\Users\alexa\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 4.7745ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.0217ms
[debug]     Load.loadUnit(file:/C:/Users/alexa/.sbt/1.0/plugins/, ...) took 28.7718ms
[debug]   Load.apply: load took 30.0552ms
[debug]   Load.apply: resolveProjects took 0.0727ms
[debug]   Load.apply: finalTransforms took 6.2969ms
[debug]   Load.apply: config.delegates took 0.2182ms
[debug]   Load.apply: Def.make(settings)... took 57.8686ms
[debug]   Load.apply: structureIndex took 28.7562ms
[debug]   Load.apply: mkStreams took 0.0022ms
[info] loading global plugins from C:\Users\alexa\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 507.1177ms
[debug]           Load.loadUnit: plugins took 31.8031ms
[debug]           Load.loadUnit: defsScala took 0.0309ms
[debug] [Loading] Scanning directory C:\Users\alexa\OneDrive - Danmarks Tekniske Universitet\EK2Chisel\chisel-lab-master\vending\project
[debug]             Load.loadUnit: mkEval took 1.1898ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\alexa\OneDrive - Danmarks Tekniske Universitet\EK2Chisel\chisel-lab-master\vending\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 6.5703 ms
[info] loading settings for project vending-build from idea.sbt ...
[debug]               Load.resolveProject(vending-build) took 13.7512ms
[debug]             Load.loadTransitive: finalizeProject(Project(id vending-build, base: C:\Users\alexa\OneDrive - Danmarks Tekniske Universitet\EK2Chisel\chisel-lab-master\vending\project, plugins: List(<none>))) took 20.8949ms
[debug] [Loading] Done in C:\Users\alexa\OneDrive - Danmarks Tekniske Universitet\EK2Chisel\chisel-lab-master\vending\project, returning: (vending-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 54.1549ms
[debug]           Load.loadUnit: cleanEvalClasses took 6.2139ms
[debug]         Load.loadUnit(file:/C:/Users/alexa/OneDrive%20-%20Danmarks%20Tekniske%20Universitet/EK2Chisel/chisel-lab-master/vending/project/, ...) took 93.6956ms
[debug]       Load.apply: load took 95.2751ms
[debug]       Load.apply: resolveProjects took 0.0949ms
[debug]       Load.apply: finalTransforms took 11.4746ms
[debug]       Load.apply: config.delegates took 0.3121ms
[debug]       Load.apply: Def.make(settings)... took 93.682ms
[debug]       Load.apply: structureIndex took 22.1455ms
[debug]       Load.apply: mkStreams took 0.0021ms
[info] loading project definition from C:\Users\alexa\OneDrive - Danmarks Tekniske Universitet\EK2Chisel\chisel-lab-master\vending\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 480.0291ms
[debug]     Load.loadUnit: defsScala took 0.0048ms
[debug] [Loading] Scanning directory C:\Users\alexa\OneDrive - Danmarks Tekniske Universitet\EK2Chisel\chisel-lab-master\vending
[debug]       Load.loadUnit: mkEval took 0.348ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\alexa\OneDrive - Danmarks Tekniske Universitet\EK2Chisel\chisel-lab-master\vending, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.8826 ms
[info] loading settings for project vending from build.sbt ...
[debug]         Load.resolveProject(vending) took 29.5266ms
[debug]       Load.loadTransitive: finalizeProject(Project(id vending, base: C:\Users\alexa\OneDrive - Danmarks Tekniske Universitet\EK2Chisel\chisel-lab-master\vending, plugins: List(<none>))) took 32.0338ms
[debug] [Loading] Done in C:\Users\alexa\OneDrive - Danmarks Tekniske Universitet\EK2Chisel\chisel-lab-master\vending, returning: (vending)
[debug]     Load.loadUnit: loadedProjectsRaw took 648.654ms
[debug]     Load.loadUnit: cleanEvalClasses took 47.5832ms
[debug]   Load.loadUnit(file:/C:/Users/alexa/OneDrive%20-%20Danmarks%20Tekniske%20Universitet/EK2Chisel/chisel-lab-master/vending/, ...) took 1177.4561ms
[debug] Load.apply: load took 1179.4982ms
[debug] Load.apply: resolveProjects took 0.0904ms
[debug] Load.apply: finalTransforms took 19.1151ms
[debug] Load.apply: config.delegates took 0.2744ms
[debug] Load.apply: Def.make(settings)... took 59.8238ms
[debug] Load.apply: structureIndex took 31.6766ms
[debug] Load.apply: mkStreams took 0.0026ms
[warn] Discarding 1 session setting.  Use 'session save' to persist session settings.
[info] set current project to vending (in build file:/C:/Users/alexa/OneDrive%20-%20Danmarks%20Tekniske%20Universitet/EK2Chisel/chisel-lab-master/vending/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(idea-shell, None, None)
