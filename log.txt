
General outline:
    3 or 4 stage pipelined processor
    Forwarding
    Latex report

    Split Memory

Dag 1:
    Done:
        Git
        Project Setup (IntelliJ SBT)
        Pipeline stage 1: Fetching (IF stage)
        Test Pipeline stage 1: Fetching (IF stage)
    Questions:
        PC as reg? Mem delay 1 cycle
            fixed
        How is instr mem filled?
                Serial port, vec in scala or bootloader
Dag 2:
    Husk
        Vi ignorerer begge de to første bits på jump imm fordi vi kun skal jumpe mindst 4 byte ad gangen
    Done
        ID Stage
        ID Stage testing

    Questions:
        What is the alternative to the control signals in the book? Answer: Nothing
        In the figure 4.49, what are the ALU control inputs actually here?
        
Dag 3:
    Husk:
        Flyt ALUcontrol ting til IDStage? yes we did that

        2. aluOpSelect created in ID-stage (as this needs logic)
        	1. Based on funct3 and funct7

        3. SPLIT ALU AND BRANCH
            1. LATER MAYBE MERGE

        We now use enums to decide the ALU operation

Dag 4:
    Done:
        EXStage
        Næsten MEMStage (mangler memSize som er relateret til spørgsmålet nedenunder)

    Husk:
        Lav controlsignaler til at bestemme om det er 1,2 eller 4 byte der skal skrives/læses fra memor

        Det burde være muligt for os at bestemme os for at branche allerede i ID

        Bundles, bundles, bundles! Please implement bundles.

        Clean up the GIT -

    Questions:
        If our memory is in byte elements then it would take 4 clockcycles to read a word? Does this mean we
        need the memory to be made of word-elements or are we missing something?


